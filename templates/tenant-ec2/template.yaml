apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: veecode-tenant-template
  title: VeeCode Tenant Template
  description: Tenant isolado do DevPortal que será servido via VeeCode SaaS.
  annotations:
  backstage.io/techdocs-ref: dir:.
  tags:
    - tenant
    - devportal
    - vm
    - aws
spec:
  owner: default/admin
  type: service

  parameters:
    - title: Nomeando seu tenant
      description: Forneça um nome para o tenant.
      required:
        - componentName
      properties:
        componentName:
          title: Qual é o nome do tenant?
          description: Escreva o nome do tenant
          type: string
          ui:autofocus: true

    - title: Tenant Settings
      description: |
        Configure the size and environment for your tenant.
      required:
        - instanceSize
        - environment
        - useSpotInstance
      properties:
        instanceSize:
          title: AWS Graviton Instance Size
          description: Select the size of the AWS Graviton (ARM) instance for your tenant
          type: string
          enum:
            - t4g.micro
            - t4g.small
            - t4g.medium
          enumNames:
            - "t4g.micro (2 vCPU, 1 GiB RAM)"
            - "t4g.small (2 vCPU, 2 GiB RAM)"
            - "t4g.medium (2 vCPU, 4 GiB RAM)"
          default: t4g.small
        useSpotInstance:
          title: Use Spot Instance
          description: Choose whether to use AWS Spot instances (lower cost but may be interrupted)
          type: boolean
          default: true
        environment:
          title: Environment
          description: Select the environment for your tenant
          type: string
          enum:
            - tenants_main_environment
          enumNames:
            - "tenants_main_environment"
          default: env1
          
    - title: Choose a location
      description: |
        This section will ask for details about the Owner and Repository name which will then be used 
        to create a repository in that location using your GitHub credentials.
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Enter an Owner and Repository Name
          description: |
            The Owner should be your GitHub username. The Repository name should be a name that is not one that exists already in your GitHub account.
          type: string
          ui:field: RepoUrlSelector
          ui:options:
            allowedHosts:
              - github.com
            allowedOwners:
              - veecode-saas-tenants
        visibility:
          title: Repository visibility
          type: string
          enum:
            - private
          enumNames:
            - "Private"
          default: private

    - title: Kong Configuration
      description: Configure the Kong Admin API credentials.
      properties:
        kongAdminUrl:
          title: Kong Admin API URL
          description: Endpoint for Kong Admin API
          type: string
          default: "https://manager.saas.vee.codes/"
        kongAdminToken:
          title: Kong Admin Token
          description: Authentication token for Kong Admin API
          type: string
          ui:field: Secret
          default: "vkpr123"

  steps:
    - id: list-inputs
      name: List Inputs
      action: debug:log
      input:
        message: |
          The following inputs were provided: 
            - Name: ${{ parameters.componentName }}
            - Instance Size: ${{ parameters.instanceSize }}
            - Environment: ${{ parameters.environment }}
          The following inputs were pre-selected:
            - Repo URL: ${{ parameters.repoUrl }}
            - Owner: ${{ (parameters.repoUrl | parseRepoUrl).owner }}
            - Repo: ${{ (parameters.repoUrl | parseRepoUrl).repo }}

    - id: fetch-skeleton
      name: Fetch Skeleton
      action: fetch:template
      input:
        url: ./skeleton
        values:
          componentName: ${{parameters.componentName}}
          componentURL: https://${{parameters.componentName}}.apps.vee.codes
          instanceSize: ${{parameters.instanceSize}}
          environment: ${{parameters.environment}}
          useSpotInstance: ${{parameters.useSpotInstance}}
          owner: ${{ parameters.repoUrl | parseRepoUrl | pick('owner') }}
          repo: ${{ parameters.repoUrl | parseRepoUrl | pick('repo') }}
          kongAdminUrl: ${{ parameters.kongAdminUrl }}
          kongAdminToken: ${{ parameters.kongAdminToken }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main
        description: Repository Created Tenant EC2 Template
        repoVisibility: ${{ parameters.visibility }}

    # - id: dispatch-workflow
    #   name: Dispatch Github Action Workflow
    #   action: github:actions:dispatch
    #   input:
    #     repoUrl: ${{ parameters.repoUrl }}
    #     workflowId: deploy.yml
    #     branchOrTagName: main
    #     token: ${{ secrets.USER_OAUTH_TOKEN or false }}

  output:
    links:
      - url: ${{steps.publish.output.remoteUrl}}
        title: "GitHub Repository"
      - url: https://github.com/${{ parameters.repoUrl | parseRepoUrl | pick('owner') }}/${{ parameters.repoUrl | parseRepoUrl | pick('repo') }}/actions/workflows/deploy.yml
        title: "Github Action Workflow"
    text:
      - title: Reminder to Delete Repository
        content: |
          **Note:** You will need to manually delete the resulting repository once you are done.
